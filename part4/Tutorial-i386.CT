<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>01812308</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>""Tutorial-i386.exe"+2566B0"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>8 Bytes</VariableType>
      <Address>"Tutorial-i386.exe"+2566B0</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Auto Assemble script"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
[ENABLE]
local address = '["Tutorial-i386.exe"+2566B0]'

local bytePlus = '+1'
local byteSum = address .. bytePlus
local num = 0
local qword_num = 13452985102348532945

print('')
print('&gt; Decimal Data')
print(string.format('%8d',readBytes(address))..'readBytes')
print(string.format('%8d',readBytes(address..bytePlus))..'readBytes +1')
print(string.format('%8d',readSmallInteger(address))..'readSmallInteger')
print(string.format('%8d',readInteger(address))..'readInteger')
print(string.format('%8d',readQword(address))..'readQword')

num = 4312121212
writeQword(address,qword_num)
print('writing'..qword_num)

print(string.format('%8d ',readBytes(address))..'readBytes')
print(string.format('%8d ',readSmallInteger(address))..'readSmallInteger')
print(string.format('%8d ',readInteger(address))..'readInteger')
print(string.format('%8d ',readQword(address))..'readQword')
print(string.format('%8x ',readQword(address))..'readQword')


 
 
[DISABLE]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
